4. En una mesa de exámenes hay 3 profesores que les deben tomar un examen oral a 30 alumnos de acuerdo al orden de llegada. Cada examen es tomado por un único profesor. Cuando un alumno llega, espera a que alguno de los profesores (cualquiera) lo llame y se dirige al escritorio correspondiente a ese profesor, donde le tomará el examen; al terminar el profesor le da la nota y el alumno se retira. Cuando un profesor está libre llama al siguiente alumno. Nota: todos los procesos deben terminar su ejecución. 

Monitor Profesor[id: 1..3] {
	procedure darExamen(int &nota) {
		tomarOral();
		nota = evaluarPresentacion();
	}
}

Monitor Aula {
	int esperando = 0;
	queue<int> libres = {1..3}; // inicialmente todos los profesores libres
	cond q;

	procedure entrar(int &idProfesor) {
		if (profLibres == 0) esperando++, wait(q);
		else profLibres--;
		idProfesor = libres.pop();
	}

	procedure salir(int idProfesor) {
		libres.push(idProfesor);
		if (esperando > 0) {
			esperando--;
			signal(q);
		} else profLibres++;
	}
}

Process Alumno[id: 1..30] {
	int idProfesor; 
	int nota;

	Aula.entrar(idProfesor);
	Profesor[idProfesor].darExamen(nota);
	Aula.salir(idProfesor);
}

