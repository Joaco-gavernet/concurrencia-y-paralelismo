// Problema: Resolver la administración de las impresoras de una oficina. Hay 3 impresoras, N usuarios y 1 director. Los usuarios y el director están continuamente trabajando y cada tanto envían documentos a imprimir. Cada impresora, cuando está libre, toma un documento y lo imprime, de acuerdo al orden de llegada, pero siempre dando prioridad a los pedidos del director. Nota: los usuarios y el director no deben esperar a que se imprima el documento.

const int I = 3;

chan liberadas(int);
chan PedidoDirector(string);
chan PedidoUsuario(id,string);

Process Impresora[id:1..I] {
	string doc;
	int idC;

	while (true) {
		receive siguiente[id](idC,doc);
		imprimir(doc);
		send liberadas(id);
	}
}

Process Coordinador {
	int id;
	string doc;
	queue<int> libres = {1..I};

	while (true) {
		while (not empty(liberadas)) {
			receive liberadas(id);
			libres.push(id);
		}
		while (not empty(PedidoDirector) and libres.size()) {
			receive PedidoDirector(doc);
			send siguiente[libres.pop()](0,doc);
		}
		if (not empty(PedidoUsuario) and libres.size()) {
			receive PedidoUsuario(id,doc);
			send siguiente[libres.pop()](id,doc);
		}
	}
}

Process Director {
	while (true) {
		string doc = trabajar();
		send PedidoDirector(doc);
	}
}

Process Usuario[id:1..N] {
	while (true) {
		string doc = trabajar();
		send PedidoUsuario(id,doc);
	}
}
