Se desea modelar el funcionamiento de un banco en el cual existen 5 cajas para realizar pagos. Existen P personas que desean pagar. Para esto cada una selecciona la caja donde hay menos personas esperando, una vez seleccionada espera a ser atendido.
NOTA: maximizando la concurrencia.

const int C = 5;

chan llegada(int);
chan listo(int);
chan esperando[1..P](string);
chan esperandoResultado[1..P](string);
chan colas[1..C](string);

Process Persona[id:1..P] {
	send llegada(id);
	int idCola;
	receive esperando[id](idCola);
	send colas[idCola](id);
	receive esperandoResultado[id](resultado); // sincronizacion
}

Process Coordinador {
	vector<int> totales(C,0);
	int id;

	while (true) {
		receive llegada(id);

		while (!empty listo) {
			receive listo(id);
			totales[id]--;
		}

		minimo = getMin(totales);
		totales[minimo]++;
		send esperando[id](minimo);
	}

}

Process Caja[id: 1..C] {
	int idPersona;
	while (true) {
		receive colas[id](idPersona);
		resultado = procesar(idPersona); // puede demorarse indeterminadamente
		send esperandoResultado[idPersona](resultado);
		send listo(id); // avisa que finaliza al coordinador
	}
}
